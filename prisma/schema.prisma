// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") 
}

enum INSTANCIA {
  INTERCOLEGIAL
  ZONAL
  PROVINCIAL
  REGIONAL
  NACIONAL
}

//Results

model Participante{
  id_participante Int @default(autoincrement()) @id
  dni Int @unique
  nombre String
  apellido String
  email String?
  participaciones Participacion[]
}

model Participacion {
  id_participacion Int @default(autoincrement()) @id
  nivel Int
  participante Participante @relation(fields: [id_participante], references: [id_participante])
  id_participante Int
  colegio Colegio @relation(fields: [id_colegio], references: [id_colegio])
  id_colegio Int @default(1)
  rinde Rinde[]
  competencia Competencia @relation(fields: [id_competencia],references: [id_competencia]) 
  id_competencia Int
}

model Colegio {
  id_colegio Int @default(autoincrement()) @id
  nombre String
  sede String?
  localidad String?
  participaciones Participacion[]
  sede_instancia SedeInstancia[]
}

model Competencia {
  id_competencia Int @default(autoincrement()) @id
  numero Int
  ano Int @map("a√±o")
  tipo String
  pruebas Prueba[]
  participantes Participacion[]
}

model Prueba {
  id_prueba Int @default(autoincrement()) @id
  fecha DateTime @db.Date
  instancia INSTANCIA
  cantidad_problemas Int @default(3)
  competencia Competencia @relation(fields: [id_competencia],references: [id_competencia])
  id_competencia Int
  rinden Rinde[]
  sedeinstancia SedeInstancia[]
}

model Rinde {
  id_rinde  Int @default(autoincrement()) @id
  presente Boolean
  aprobado Boolean
  resultados Json
  participacion Participacion @relation(fields: [id_participacion],references: [id_participacion])
  id_participacion Int
  prueba Prueba @relation(fields: [id_prueba],references: [id_prueba])
  id_prueba Int
}

//News

model Noticias{
  id_noticia Int @default(autoincrement()) @id
  titulo String
  link String
  agregado DateTime @default(now())
}

//Calendario

model Fechas{
  id_fecha Int @default(autoincrement()) @id
  fecha_inicio DateTime @db.Date
  fecha_fin DateTime? @db.Date
  tipo String
  texto String
}

model Libro{
  id_libro Int @default(autoincrement()) @id
  nombre String
  precio Float
  categoria String?
  descuento Float @default(0)
  nuevo Boolean @default(false)
  tapa String?
}

//Venues

model Sede{
  id_sede Int @default(autoincrement()) @id
  nombre String
  direccion String
  sedeinstancia SedeInstancia[]
}

model SedeInstancia{
  id_sede_instancia Int @default(autoincrement()) @id
  prueba Prueba @relation(fields: [id_prueba], references: [id_prueba])
  id_prueba Int
  sede Sede @relation(fields: [id_sede], references: [id_sede])
  id_sede Int
  colegio Colegio @relation(fields: [id_colegio], references: [id_colegio])
  id_colegio Int
  aclaracion String?
}