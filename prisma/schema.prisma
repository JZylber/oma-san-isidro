generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Participante {
  id_participante Int             @id @default(autoincrement())
  dni             Int             @unique
  nombre          String
  apellido        String
  email           String?
  participaciones Participacion[]
}

model Participacion {
  id_participacion           Int                          @id @default(autoincrement())
  nivel                      Int
  id_participante            Int
  id_colegio                 Int                          @default(1)
  id_competencia             Int
  inhabilitaciones           Inhabilitado[]
  colegio                    Colegio                      @relation(fields: [id_colegio], references: [id_colegio])
  competencia                Competencia                  @relation(fields: [id_competencia], references: [id_competencia])
  participante               Participante                 @relation(fields: [id_participante], references: [id_participante])
  ParticipacionSedeInstancia ParticipacionSedeInstancia[]
  rinde                      Rinde[]
}

model Colegio {
  id_colegio      Int             @id @default(autoincrement())
  nombre          String
  sede            String?
  localidad       String?
  participaciones Participacion[]
  sede_instancia  SedeInstancia[]
}

model Competencia {
  id_competencia             Int             @id @default(autoincrement())
  numero                     Int
  ano                        Int             @map("año")
  tipo                       String
  fecha_inscripcion_nacional DateTime?       @db.Date
  fecha_inscripcion_regional DateTime?       @db.Date
  link_inscripcion           String?
  participantes              Participacion[]
  pruebas                    Prueba[]
}

model Prueba {
  id_prueba                 Int              @id @default(autoincrement())
  fecha                     DateTime         @db.Date
  instancia                 INSTANCIA
  id_competencia            Int
  cantidad_problemas        Int              @default(3)
  fecha_limite_autorizacion DateTime?        @db.Date
  resultados_disponibles    Boolean          @default(false)
  hora_ingreso              DateTime         @default(dbgenerated("'13:30:00'::time without time zone")) @db.Time(6)
  duracion                  Int              @default(120) @map("duración")
  criterio_habilitacion     Json?            @map("criterio_habilitación")
  inhabilitados             Inhabilitado[]
  problemas                 Problema[]
  competencia               Competencia      @relation(fields: [id_competencia], references: [id_competencia])
  puntoinstancia            PuntoInstancia[]
  rinden                    Rinde[]
  sedeinstancia             SedeInstancia[]
}

model Rinde {
  id_rinde         Int           @id @default(autoincrement())
  presente         Boolean
  aprobado         Boolean
  resultados       Json
  id_participacion Int
  id_prueba        Int
  aclaracion       String?
  participacion    Participacion @relation(fields: [id_participacion], references: [id_participacion])
  prueba           Prueba        @relation(fields: [id_prueba], references: [id_prueba])
}

model Noticias {
  id_noticia Int      @id @default(autoincrement())
  titulo     String
  link       String
  agregado   DateTime @default(now())
  visible    Boolean  @default(true)
}

model Fechas {
  id_fecha     Int       @id @default(autoincrement())
  fecha_inicio DateTime  @db.Date
  fecha_fin    DateTime? @db.Date
  tipo         String
  texto        String
}

model Libro {
  id_libro  Int     @id @default(autoincrement())
  nombre    String
  categoria String?
  precio    Float
  descuento Float   @default(0)
  tapa      String?
  nuevo     Boolean @default(false)
}

model Sede {
  id_sede       Int             @id @default(autoincrement())
  nombre        String
  direccion     String
  localidad     String
  sedeinstancia SedeInstancia[]
}

model SedeInstancia {
  id_sede_instancia          Int                          @id @default(autoincrement())
  id_prueba                  Int
  id_sede                    Int
  id_colegio                 Int
  aclaracion                 String?
  niveles                    Int[]                        @default([])
  ParticipacionSedeInstancia ParticipacionSedeInstancia[]
  colegio                    Colegio                      @relation(fields: [id_colegio], references: [id_colegio])
  prueba                     Prueba                       @relation(fields: [id_prueba], references: [id_prueba])
  sede                       Sede                         @relation(fields: [id_sede], references: [id_sede])
}

model ParticipacionSedeInstancia {
  id_participacion_sede_instancia Int           @id @default(autoincrement())
  id_participacion                Int
  id_sede_instancia               Int
  participacion                   Participacion @relation(fields: [id_participacion], references: [id_participacion])
  sedeinstancia                   SedeInstancia @relation(fields: [id_sede_instancia], references: [id_sede_instancia])
}

model PuntoEntrega {
  id_punto       Int              @id @default(autoincrement())
  nombre         String?
  direccion      String
  localidad      String
  aclaracion     String?
  puntoinstancia PuntoInstancia[]
}

model PuntoInstancia {
  id_punto_instancia Int          @id @default(autoincrement())
  id_prueba          Int
  id_punto           Int
  prueba             Prueba       @relation(fields: [id_prueba], references: [id_prueba])
  punto              PuntoEntrega @relation(fields: [id_punto], references: [id_punto])
}

model Problema {
  id_problema Int    @id @default(autoincrement())
  nivel       Int
  link        String
  id_prueba   Int
  links_foro  Json   @default("[]")
  Prueba      Prueba @relation(fields: [id_prueba], references: [id_prueba])
}

model Inhabilitado {
  id_inhabilitado  Int           @id @default(autoincrement())
  id_participacion Int
  id_prueba        Int
  motivo           String?
  Participacion    Participacion @relation(fields: [id_participacion], references: [id_participacion])
  Prueba           Prueba        @relation(fields: [id_prueba], references: [id_prueba])
}

model Usuario {
  id_usuario Int      @id @default(autoincrement())
  nombre     String
  apellido   String
  email      String   @unique
  password   String
  admin      Boolean  @default(false)
  token      String?
}

enum INSTANCIA {
  INTERCOLEGIAL
  ZONAL
  PROVINCIAL
  REGIONAL
  NACIONAL
  INTERESCOLAR
}
